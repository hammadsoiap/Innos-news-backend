version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        command:
            # -sh -c "composer install"
        ports:
            - '${APP_PORT:-8081}:8081'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        env_file:
            - .env
        working_dir: /app
        restart: always
        environment:
            WWWUSER: '${WWWUSER}'
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
            - '.:/app'
        networks:
            - app-network
        depends_on:
            - redis
            - mysql

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'redis-data:/data'
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    mysql:
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        restart: always
        environment:
            MYSQL_ROOT_HOST: '%'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'mysql-data:/var/lib/mysql'
            - './database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

networks:
    app-network:
        driver: bridge

volumes:
    pgsql-data:
        driver: local
    redis-data:
        driver: local
    mysql-data:
        driver: local